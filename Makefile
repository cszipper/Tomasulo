#############################################################################
# Makefile for building: Tomasulo
# Generated by qmake (2.01a) (Qt 4.8.6) on: ?? 5? 18 19:13:44 2015
# Project:  Tomasulo.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile Tomasulo.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		instructionstate.cpp \
		loadunit.cpp \
		reservedstack.cpp \
		register.cpp \
		def.cpp moc_mainwindow.cpp \
		moc_instructionstate.cpp \
		moc_loadunit.cpp \
		moc_reservedstack.cpp \
		moc_register.cpp
OBJECTS       = main.o \
		mainwindow.o \
		instructionstate.o \
		loadunit.o \
		reservedstack.o \
		register.o \
		def.o \
		moc_mainwindow.o \
		moc_instructionstate.o \
		moc_loadunit.o \
		moc_reservedstack.o \
		moc_register.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Tomasulo.pro
QMAKE_TARGET  = Tomasulo
DESTDIR       = 
TARGET        = Tomasulo

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_instructionstate.h ui_loadunit.h ui_reservedstack.h ui_register.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Tomasulo.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile Tomasulo.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Tomasulo.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Tomasulo1.0.0 || $(MKDIR) .tmp/Tomasulo1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Tomasulo1.0.0/ && $(COPY_FILE) --parents mainwindow.h instructionstate.h loadunit.h reservedstack.h register.h def.h .tmp/Tomasulo1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp instructionstate.cpp loadunit.cpp reservedstack.cpp register.cpp def.cpp .tmp/Tomasulo1.0.0/ && $(COPY_FILE) --parents mainwindow.ui instructionstate.ui loadunit.ui reservedstack.ui register.ui .tmp/Tomasulo1.0.0/ && (cd `dirname .tmp/Tomasulo1.0.0` && $(TAR) Tomasulo1.0.0.tar Tomasulo1.0.0 && $(COMPRESS) Tomasulo1.0.0.tar) && $(MOVE) `dirname .tmp/Tomasulo1.0.0`/Tomasulo1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Tomasulo1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_instructionstate.cpp moc_loadunit.cpp moc_reservedstack.cpp moc_register.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_instructionstate.cpp moc_loadunit.cpp moc_reservedstack.cpp moc_register.cpp
moc_mainwindow.cpp: loadunit.h \
		def.h \
		instructionstate.h \
		register.h \
		reservedstack.h \
		mainwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_instructionstate.cpp: def.h \
		instructionstate.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) instructionstate.h -o moc_instructionstate.cpp

moc_loadunit.cpp: def.h \
		loadunit.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) loadunit.h -o moc_loadunit.cpp

moc_reservedstack.cpp: def.h \
		reservedstack.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) reservedstack.h -o moc_reservedstack.cpp

moc_register.cpp: def.h \
		register.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) register.h -o moc_register.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_instructionstate.h ui_loadunit.h ui_reservedstack.h ui_register.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_instructionstate.h ui_loadunit.h ui_reservedstack.h ui_register.h
ui_mainwindow.h: mainwindow.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_instructionstate.h: instructionstate.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic instructionstate.ui -o ui_instructionstate.h

ui_loadunit.h: loadunit.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic loadunit.ui -o ui_loadunit.h

ui_reservedstack.h: reservedstack.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic reservedstack.ui -o ui_reservedstack.h

ui_register.h: register.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic register.ui -o ui_register.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		loadunit.h \
		def.h \
		instructionstate.h \
		register.h \
		reservedstack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		loadunit.h \
		def.h \
		instructionstate.h \
		register.h \
		reservedstack.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

instructionstate.o: instructionstate.cpp instructionstate.h \
		def.h \
		ui_instructionstate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o instructionstate.o instructionstate.cpp

loadunit.o: loadunit.cpp loadunit.h \
		def.h \
		ui_loadunit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o loadunit.o loadunit.cpp

reservedstack.o: reservedstack.cpp reservedstack.h \
		def.h \
		ui_reservedstack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reservedstack.o reservedstack.cpp

register.o: register.cpp register.h \
		def.h \
		ui_register.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o register.o register.cpp

def.o: def.cpp def.h \
		mainwindow.h \
		loadunit.h \
		instructionstate.h \
		register.h \
		reservedstack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o def.o def.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_instructionstate.o: moc_instructionstate.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_instructionstate.o moc_instructionstate.cpp

moc_loadunit.o: moc_loadunit.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_loadunit.o moc_loadunit.cpp

moc_reservedstack.o: moc_reservedstack.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reservedstack.o moc_reservedstack.cpp

moc_register.o: moc_register.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_register.o moc_register.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

